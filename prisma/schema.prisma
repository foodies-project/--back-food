// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement()) 

  name      String   
  email     String   @unique 
  password  String   

  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt 

  OrderHistory OrderHistory?
}

model Cuisine {
  id   Int    @id @default(autoincrement()) 
  name String @unique
  icon String 

  Restaurants Restaurant[]
}

model Restaurant {
  id            Int      @id @default(autoincrement()) 

  name          String   
  photo         String   
  cuisineId     Int
  isOpen        Boolean  @default(false)
  rating        Float    @default(1.0)

  address       String @default("")
  distance      Float @default(0.0)

  deliveryPrice Float    
  minPrepTime   Int      
  maxPrepTime   Int      

  Cuisine       Cuisine  @relation(fields: [cuisineId], references: [id]) 
  Categories Category[]
}

model Dish {
  id  Int   @id @default(autoincrement())

  name  String
  price Float @default(0.0)
  description String
  photo String  
  numberOfOrders Int @default(0)

  categoryId Int?
  
  Orders Order[] @relation("OrderDishes")
  Category Category? @relation(fields: [categoryId], references: [id])
}

model Category {
  id  Int   @id @default(autoincrement())

  name String

  restaurantId Int @default(0)

  Dishes Dish[]
  Restaurant Restaurant @relation(fields: [restaurantId], references: [id])
}

model Order {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now()) 
  orderHistoryId Int

  Dishes Dish[] @relation("OrderDishes")
  OrderHistory OrderHistory @relation(fields: [orderHistoryId], references: [id])
}


model OrderHistory {
  id Int @id @default(autoincrement())

  userId Int @unique

  User User @relation(fields: [userId], references: [id])
  Orders Order[] 
}